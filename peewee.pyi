import typing

class Field:
    def __init__(self, *args: typing.Any, **kwargs: typing.Any) -> None: ...

class CharField(Field): ...
class IntegerField(Field): ...
class DateField(Field): ...
class AutoField(Field): ...
class ForeignKeyField(Field): ...
class TimestampField(Field): ...
class DateTimeField(Field): ...

class Model:
    def __init__(self, **kwargs: typing.Any) -> None: ...
    @classmethod
    def create(cls, **kwargs: typing.Any)-> typing.Any: ...

class SqliteDatabase:
    def __init__(self, *args: typing.Any, **kwargs: typing.Any) -> None: ...
    def init(self, *args: typing.Any) -> None: ...
    def connect(self)->None: ...
    def create_tables(self, tables: typing.List[typing.Any])->None: ...

class DoesNotExist(BaseException): ...
class IntegrityError(BaseException): ...

